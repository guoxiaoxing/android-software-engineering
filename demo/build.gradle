apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'


    defaultConfig {
        applicationId "com.guoxiaoxing.software.engineering.demo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def version = '26.0.0'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    compile "com.android.support:appcompat-v7:$version"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}


task printList {
    def list = [1, 2, 3, 4, 5]
    println(list)
    println(list[1])//访问第二个元素
    println(list[-1])//访问最后一个元素
    println(list[1..3])//访问第二个到第四个元素
}

task printMap {
    def map = ['width': 720, 'height': 1080]
    println(map)
    println(map.width)//访问width
    println(map.height)//访问height
    map.each {//遍历map
        println("Key:${it.key}, Value:${it.value}")
    }
}

def method(int a, int b) {
    if (a > b) {
        a
    } else {
        b
    }
}

def callMethod() {
    method 1, 2
}
